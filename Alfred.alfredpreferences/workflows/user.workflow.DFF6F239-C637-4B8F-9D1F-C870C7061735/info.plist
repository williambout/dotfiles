<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.machineclean</string>
	<key>connections</key>
	<dict>
		<key>5E281C93-A16E-4148-9C7B-0E4CA2276285</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>FAD30B1C-1909-4F9C-87E9-AEEE5C427502</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7CC0213F-BC65-43B3-9675-BBA23E04881C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>36D260D9-DD1B-4AE7-953C-732219953B72</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D9245730-36BC-415E-BF86-FB40B9A7A25F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>78F747FB-BB88-4569-A5A8-63E3A97BFBEA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>7CC0213F-BC65-43B3-9675-BBA23E04881C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>FAD30B1C-1909-4F9C-87E9-AEEE5C427502</key>
		<array/>
		<key>FED5D171-D581-4C00-9172-DD195380AC73</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D9245730-36BC-415E-BF86-FB40B9A7A25F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Lock your keyboard temporarily, so you can clean them</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>MachineClean</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly workflow_type='workflow'
readonly frequency_check='15'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED UNLESS YOU KNOW WHAT YOU ARE DOING
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local readonly terminal_notifier="$(find . -name terminal-notifier.app)"

  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}"/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
  else
    osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
  fi
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${workflow_type}" =~ ^(workflow|page)$ ]] || abort "'workflow_type' (${workflow_type}) needs to be one of 'workflow' or 'page'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" != "${remote_version}" ]]; then
    if [[ "${workflow_type}" == 'page' ]]; then
      notification 'Opening download page…'
      open "${workflow_url}"
    else
      if url_exists "${workflow_url}"; then
        notification 'Downloading and installing…'
        curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${workflow_url}"
        open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
      else
        abort "'workflow_url' (${workflow_url}) appears to not be reachable."
      fi # url_exists
    fi # workflow_type
  else
    touch "${local_info_plist}" # Reset timer by touching local file
  fi # diff
fi #find</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>78F747FB-BB88-4569-A5A8-63E3A97BFBEA</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>macclean</string>
				<key>subtext</key>
				<string>Will lock keyboard and trackpad for {var:seconds_to_lock} seconds</string>
				<key>text</key>
				<string>MachineClean</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>FED5D171-D581-4C00-9172-DD195380AC73</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>notification() {
	./_licensed/terminal-notifier/terminal-notifier.app/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -message "${1}"
}

# Abort if `seconds_to_lock` is unset or not an interger
if [[ -z "${seconds_to_lock}" || ! "${seconds_to_lock}" =~ ^[0-9]+$ ]]; then
  echo 'Lock time in the Workflow Environment Variables is not a full number' &gt;&amp;2
  exit 1
fi


# Abort if on a MacBook Air
if [[ "$(sysctl hw.model)" == *'MacBookAir'* ]]; then
  notification 'This workflow does not yet work on the MacBook Air'
  open 'https://github.com/vitorgalvao/alfred-workflows/issues/19'
  exit 1
fi

keyboard=$(kextstat | grep -i 'keyboard' | head -1 | awk '{ print $6 }')

osascript &lt;&lt; EOS
  # We have to run the 'osascript' inside the 'osascript' because otherwise times will not coincide. Running a command with 'with administrator privileges' does not stall execution of the rest of the script, meaning the subsequent commands would run before their time

  do shell script "kextunload -bundle-id ${keyboard} ; osascript -e 'tell application \"Alfred 3\" to run trigger \"show_timer\" in workflow \"com.vitorgalvao.alfred.machineclean\"' ; sleep ${seconds_to_lock} ; kextload -bundle-id ${keyboard}" with administrator privileges
EOS

notification 'Keyboard unlocked'</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D9245730-36BC-415E-BF86-FB40B9A7A25F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># Restart BetterTouchTool, if it is running
if application "BetterTouchTool" is running then
  tell application "BetterTouchTool"
    quit
    delay 2
    activate
  end tell
end if</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>36D260D9-DD1B-4AE7-953C-732219953B72</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>show_timer</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>5E281C93-A16E-4148-9C7B-0E4CA2276285</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string># Abort if `seconds_to_lock` is unset or not an interger
if [[ -z "${seconds_to_lock}" || ! "${seconds_to_lock}" =~ ^[0-9]+$ ]]; then
  echo 'Lock time in the Workflow Environment Variables is not a full number' &gt;&amp;2
  exit 1
fi

seconds_remaining=$((seconds_to_lock - timer))

if [[ "${seconds_remaining}" -gt 0 ]]; then
cat &lt;&lt; EOB
{
"rerun" : 1,

"variables": {
  "timer": "$((timer + 1))"
},

"items": [{
  "title": "MachineClean",
  "subtitle": "Unlocking in ${seconds_remaining} seconds",
  "icon": "icon.png"
}]}
EOB
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>FAD30B1C-1909-4F9C-87E9-AEEE5C427502</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>type</key>
			<string>alfred.workflow.utility.hidealfred</string>
			<key>uid</key>
			<string>7CC0213F-BC65-43B3-9675-BBA23E04881C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Call `macclean` and your keyboard will be temporarily locked (for `seconds_to_lock` in the Workflow Environment Variables) so you can clean them at will without messing what you’re doing.

![](https://i.imgur.com/QMI8Pcm.png)

The workflow will give you a timer of how many seconds are left to unlock and a notification when it’s done
![](https://i.imgur.com/ZdfVeOo.gif)

You will be asked for your password when locking since this operation requires elevated privileges (which is a good thing). Do keep in mind that if something goes wrong in the process, you may (naturally) need to forcefully restart your machine. That is very unlikely and I’ve been using this for quite some time without any issues, but you should be aware of it.</string>
	<key>uidata</key>
	<dict>
		<key>36D260D9-DD1B-4AE7-953C-732219953B72</key>
		<dict>
			<key>note</key>
			<string>We do this here instead of in the main `Run Script` so there’s no delay in hiding Alfred</string>
			<key>xpos</key>
			<integer>670</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>5E281C93-A16E-4148-9C7B-0E4CA2276285</key>
		<dict>
			<key>xpos</key>
			<integer>90</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>78F747FB-BB88-4569-A5A8-63E3A97BFBEA</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>670</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>7CC0213F-BC65-43B3-9675-BBA23E04881C</key>
		<dict>
			<key>xpos</key>
			<integer>570</integer>
			<key>ypos</key>
			<integer>190</integer>
		</dict>
		<key>D9245730-36BC-415E-BF86-FB40B9A7A25F</key>
		<dict>
			<key>xpos</key>
			<integer>380</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>FAD30B1C-1909-4F9C-87E9-AEEE5C427502</key>
		<dict>
			<key>xpos</key>
			<integer>380</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>FED5D171-D581-4C00-9172-DD195380AC73</key>
		<dict>
			<key>xpos</key>
			<integer>90</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>seconds_to_lock</key>
		<string>50</string>
	</dict>
	<key>version</key>
	<string>1.2.1</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
